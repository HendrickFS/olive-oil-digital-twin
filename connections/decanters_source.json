{
    "targetActorSelection": "/system/sharding/connection",
    "headers": {
    	"aggregate": false
    },
    "piggybackCommand": {
        "type": "connectivity.commands:createConnection",
        "connection": {
            "id": "mqtt-decanters-source",
            "connectionType": "mqtt",
            "connectionStatus": "open",
            "failoverEnabled": true,
            "uri": "tcp://mosquitto:1884",
            "sources": [{
                "addresses": ["olive.decanters/incoming/#"],
                "authorizationContext": ["nginx:ditto"],
                "qos": 0,
                "filters": []
            }],
            "mappingContext": {
                "mappingEngine": "JavaScript",
                "options": {
                    "incomingScript": "function mapToDittoProtocolMsg(headers,textPayload,bytePayload,contentType){const jsonString=String.fromCharCode.apply(null,new Uint8Array(bytePayload));const jsonData=JSON.parse(jsonString);const thingId=(jsonData.thingId??'olive.decanters:decanter001').split(':');const value={temperature:{properties:{value:jsonData.temperature??0}},waterQuantity:{properties:{value:jsonData.waterQuantity??0}}};return Ditto.buildDittoProtocolMsg(thingId[0],thingId[1],'things','twin','commands','modify','/features',headers,value);}",
                    "outgoingScript": "function mapFromDittoProtocolMsg(namespace, id, group, channel, criterion, action, path, dittoHeaders, value, status, extra) {return null;}",
                    "loadBytebufferJS": "false",
                    "loadLongJS": "false"
                }
            }
        }
    }
}